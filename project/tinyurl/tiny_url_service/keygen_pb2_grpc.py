# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import keygen_pb2 as keygen__pb2


class KeyGenStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListKeys = channel.unary_stream(
        '/keygen.KeyGen/ListKeys',
        request_serializer=keygen__pb2.Empty.SerializeToString,
        response_deserializer=keygen__pb2.Key.FromString,
        )


class KeyGenServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ListKeys(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_KeyGenServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListKeys': grpc.unary_stream_rpc_method_handler(
          servicer.ListKeys,
          request_deserializer=keygen__pb2.Empty.FromString,
          response_serializer=keygen__pb2.Key.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'keygen.KeyGen', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
